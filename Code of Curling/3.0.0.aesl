<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="0" name="STOP"/>
<constant value="1" name="FORWARD_1"/>
<constant value="2" name="TURN_LEFT"/>
<constant value="3" name="FORWARD_2"/>
<constant value="4" name="TURN_RIGHT_1"/>
<constant value="5" name="FORWARD_3"/>
<constant value="6" name="TURN_LEFT_1"/>
<constant value="7" name="BACK"/>
<constant value="8" name="TURN"/>
<constant value="1" name="PASS_1"/>
<constant value="2" name="PASS_2"/>
<constant value="9" name="FORWARD_4"/>
<constant value="10" name="TURN_RIGHT_2"/>
<constant value="11" name="FORWARD_5"/>
<constant value="12" name="TURN_LEFT_2"/>
<constant value="13" name="FORWARD_6"/>
<constant value="14" name="TURN_RIGHT_3"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">var state
var pass
onevent button.backward
	callsub stop

onevent button.left
	callsub forward_1
	callsub pass_1

onevent button.right
	callsub forward_4
	callsub pass_1

onevent prox
	if state == FORWARD_2 and prox.ground.delta[0] &lt;= 10 then
		callsub turn_right_1
	end
	if state == BACK and prox.ground.delta[0] &lt;= 10 then
		callsub turn
	end
	if state == FORWARD_5 and prox.ground.delta[1] &lt;= 10 then
		callsub turn_left_2
	end

onevent timer0
	if state == FORWARD_1 and timer.period[0] >= 1000 then
		timer.period[0] = 0
		callsub turn_left
	elseif state == TURN_LEFT and timer.period[0] >= 360 then
		timer.period[0] = 0
		callsub forward_2
	elseif state == TURN_RIGHT_1 and timer.period[0] >= 360 then
		timer.period[0] = 0
		callsub forward_3
	elseif state == FORWARD_3 and timer.period[0] >= 4500 then
		timer.period[0] = 0
		callsub turn_left_1
	elseif state == TURN_LEFT_1 and timer.period[0] >= 360 then
		timer.period[0] = 0
		callsub back
	elseif state == FORWARD_4 and timer.period[0] >= 1000 then
		timer.period[0] = 0
		callsub turn_right_2
	elseif state == TURN_RIGHT_2 and timer.period[0] >= 360 then
		timer.period[0] = 0
		callsub forward_5
	elseif state == TURN_LEFT_2 and timer.period[0] >= 360 then
		timer.period[0] = 0
		callsub forward_6
	elseif state == FORWARD_6 and timer.period[0] >= 4500 then
		timer.period[0] = 0
		callsub turn_right_3
	elseif state == TURN_RIGHT_3 and timer.period[0] >= 360 then
		timer.period[0] = 0
		callsub back
	end

onevent timer1
	if pass == PASS_1 and timer.period[1] >= 30000 then
		timer.period[1] = 0
		callsub pass_2
	elseif pass == PASS_2 and timer.period[1] >= 3000 then
		timer.period[1] = 0
		callsub stop
	end

sub stop
	state = STOP
	motor.left.target = 0
	motor.right.target = 0
	timer.period[0] = 0
	timer.period[1] = 0

sub pass_1
	pass = PASS_1
	timer.period[1] = 30000

sub pass_2
	pass = PASS_2
	timer.period[1] = 30000

sub forward_1
	state = FORWARD_1
	motor.left.target = 500
	motor.right.target = 500
	timer.period[0] = 1000

sub turn_left
	state = TURN_LEFT
	motor.left.target = -500
	motor.right.target = 500
	timer.period[0] = 360

sub forward_2
	state = FORWARD_2
	motor.left.target = 500
	motor.right.target = 500
	
sub turn_right_1
	state = TURN_RIGHT_1
	motor.left.target = 500
	motor.right.target = -500
	timer.period[0] = 360
	
sub forward_3
	state = FORWARD_3
	motor.left.target = 500
	motor.right.target = 500
	timer.period[0] = 4500

sub turn_left_1
	state = TURN_LEFT_1
	motor.left.target = -500
	motor.right.target = 500
	timer.period[0] = 360

sub back
	state = BACK
	motor.left.target = -500
	motor.right.target = -500
	
sub turn
	state = TURN
	motor.left.target = -500
	motor.right.target = 500

sub forward_4
	state = FORWARD_4
	motor.left.target = 500
	motor.right.target = 500
	timer.period[0] = 1000

sub turn_right_2
	state = TURN_RIGHT_2
	motor.left.target = 500
	motor.right.target = -500
	timer.period[0] = 360

sub forward_5
	state = FORWARD_5
	motor.left.target = 500
	motor.right.target = 500

sub turn_left_2
	state = TURN_LEFT_2
	motor.left.target = -500
	motor.right.target = 500
	timer.period[0] = 360

sub forward_6
	state = FORWARD_6
	motor.left.target = 500
	motor.right.target = 500
	timer.period[0] = 4500

sub turn_right_3
	state = TURN_RIGHT_3
	motor.left.target = 500
	motor.right.target = -500
	timer.period[0] = 360


</node>


</network>
